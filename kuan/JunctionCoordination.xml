<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

const int N = 4; //No. of Bale vehicles
typedef int[0,N-1] id_t;

chan reachJn[N], stop[N], leave[N];
urgent chan move[N];</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="0" y="0">
		</location>
		<init ref="id0"/>
	</template>
	<template>
		<name x="5" y="5">BaleVehicle</name>
		<parameter>const id_t id</parameter>
		<declaration>// Place local declarations here.
clock x;
</declaration>
		<location id="id1" x="-1105" y="-195">
			<name x="-1129" y="-227">Riskfree</name>
		</location>
		<location id="id2" x="-1105" y="-59">
			<name x="-1181" y="-85">ReachJn</name>
			<label kind="invariant" x="-1173" y="-68">x&lt;=20</label>
		</location>
		<location id="id3" x="-841" y="-195">
			<name x="-858" y="-229">Diversion</name>
			<label kind="invariant" x="-824" y="-204">x&lt;=5</label>
		</location>
		<location id="id4" x="-841" y="-59">
			<name x="-824" y="-85">Start</name>
			<label kind="invariant" x="-824" y="-68">x&lt;=15</label>
		</location>
		<location id="id5" x="-960" y="68">
			<name x="-977" y="76">Stop</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-995" y="-110">x&gt;=10</label>
			<label kind="assignment" x="-995" y="-93">x=0</label>
			<nail x="-1037" y="-93"/>
			<nail x="-969" y="-127"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="guard" x="-994" y="-229">x&gt;=3</label>
			<label kind="synchronisation" x="-1003" y="-212">leave[id]!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-841" y="-161">x&gt;=7</label>
			<label kind="assignment" x="-841" y="-144">x=0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-867" y="34">move[id]?</label>
			<label kind="assignment" x="-867" y="51">x=0</label>
			<nail x="-858" y="34"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id5"/>
			<label kind="guard" x="-1113" y="59">x&lt;=10</label>
			<label kind="synchronisation" x="-1122" y="42">stop[id]?</label>
			<nail x="-1096" y="42"/>
			<nail x="-1003" y="59"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-1181" y="-170">reachJn[id]!</label>
			<label kind="assignment" x="-1147" y="-153">x=0</label>
		</transition>
	</template>
	<template>
		<name>Junction</name>
		<declaration>id_t list[N+1];
int[0,N] len;

//Put an element at the end of the queue
void enqueue(id_t element)
{
    list[len++] = element;
}

//Remove the front element of the queue
void dequeue()
{
    int i = 0;
    len -= 1;
    while(i&lt;len)
    {
        list[i]=list[i+1];
        i++;
    }
    list[i]=0;
}

//Returns front element of the queue
id_t front()
{
    return list[0];
}

// Returns the last element of the queue
id_t tail()
{
   return list[len - 1];
}</declaration>
		<location id="id6" x="-773" y="-3536">
			<name x="-783" y="-3570">Free</name>
		</location>
		<location id="id7" x="-773" y="-3391">
			<name x="-756" y="-3391">Busy</name>
		</location>
		<location id="id8" x="-773" y="-3281">
			<committed/>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="select" x="-765" y="-3502">e:id_t</label>
			<label kind="guard" x="-765" y="-3485">len==0</label>
			<label kind="synchronisation" x="-765" y="-3468">reachJn[e]?</label>
			<label kind="assignment" x="-765" y="-3451">enqueue(e)</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-909" y="-3493">len&gt;0</label>
			<label kind="synchronisation" x="-909" y="-3476">move[front()]!</label>
			<nail x="-918" y="-3536"/>
			<nail x="-918" y="-3391"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="select" x="-620" y="-3502">e:id_t</label>
			<label kind="guard" x="-620" y="-3485">e==front()</label>
			<label kind="synchronisation" x="-620" y="-3468">leave[e]?</label>
			<label kind="assignment" x="-620" y="-3451">dequeue()</label>
			<nail x="-629" y="-3391"/>
			<nail x="-629" y="-3536"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-739" y="-3332">stop[tail()]!</label>
			<nail x="-748" y="-3340"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="select" x="-832" y="-3366">e:id_t</label>
			<label kind="synchronisation" x="-841" y="-3349">reachJn[e]?</label>
			<label kind="assignment" x="-849" y="-3332">enqueue(e)</label>
		</transition>
	</template>
	<system>// Place template instantiations here.


// List one or more processes to be composed into a system.
system BaleVehicle, Junction;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
