<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
//chan move, continue_on_btrack, pickup, continue_on_strack, unload, continue_to_new_bale, end_of_track;
//bool bale_remaining = true;
//bool obstacle = true;
chan move, unload, pickup, match;
bool bales = true;
bool kcar0 = {true, true, false, true};
// bool kcar0 = ();
// bool kcar0 = ();
// bool kcar0 = ();
int kstatus = {0, 0, 1, 1};
</declaration>
	<template>
		<name>Car0</name>
		<location id="id0" x="-1352" y="-144">
			<name x="-1334" y="-187">start</name>
		</location>
		<location id="id1" x="-1148" y="-144">
			<name x="-1156" y="-127">Idle</name>
		</location>
		<location id="id2" x="-977" y="-144">
			<name x="-1020" y="-187">BalesInTheField</name>
		</location>
		<location id="id3" x="-824" y="-144">
			<name x="-850" y="-127">CanCarry</name>
		</location>
		<location id="id4" x="-646" y="-144">
			<name x="-705" y="-195">MoveToBaleLocation</name>
		</location>
		<location id="id5" x="-450" y="-144">
			<name x="-493" y="-127">PickUpTheBales</name>
		</location>
		<location id="id6" x="-289" y="-144">
			<name x="-357" y="-187">MoveToDesiredLocation</name>
		</location>
		<location id="id7" x="-76" y="-144">
			<name x="-127" y="-127">UnloadTheBales</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-1182" y="-42">bales == false</label>
			<nail x="-1054" y="-42"/>
			<nail x="-1224" y="-42"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-654" y="-493">unload!</label>
			<label kind="assignment" x="-671" y="-476">kstatus(0) = 0</label>
			<nail x="-76" y="-450"/>
			<nail x="-1148" y="-450"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-212" y="-170">move!</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-399" y="-170">pickup!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-578" y="-170">move!</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-790" y="-187">match!</label>
			<label kind="assignment" x="-790" y="-170">kstatus(0) = 1</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-1122" y="-170">bales == true</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-1334" y="-170">kstatus(0) = 0</label>
		</transition>
	</template>
	<template>
		<name>Car1</name>
		<location id="id8" x="0" y="0">
			<name x="-10" y="-34">start</name>
		</location>
		<init ref="id8"/>
	</template>
	<template>
		<name>Car2</name>
		<location id="id9" x="-510" y="-136">
			<name x="-520" y="-170">start</name>
		</location>
		<init ref="id9"/>
	</template>
	<template>
		<name>Car3</name>
		<location id="id10" x="0" y="0">
			<name x="-10" y="-34">start</name>
		</location>
		<init ref="id10"/>
	</template>
	<template>
		<name>Field</name>
		<location id="id11" x="-637" y="0">
			<name x="-654" y="-34">start</name>
		</location>
		<location id="id12" x="-527" y="0">
		</location>
		<location id="id13" x="-433" y="-8">
		</location>
		<location id="id14" x="-297" y="0">
		</location>
		<location id="id15" x="-204" y="0">
		</location>
		<location id="id16" x="-93" y="8">
		</location>
		<location id="id17" x="-8" y="0">
		</location>
		<init ref="id11"/>
	</template>
	<system>// Place template instantiations here.
//car1 = Car();
//car2 = Car();
//car3 = Car();
//car4 = Car();
k0 = car0();
//track1 = Lane();
//track2 = Lane();
//track3 = Lane();
//track4 = Lane();

//Path1 = Path();
//Path2 = Path();
//Path3 = Path();
//Path4 = Path();

//PathTest1 = PathTest();
//PathTest2 = PathTest();
//PathTest3 = PathTest();
//PathTest4 = PathTest();
// List one or more processes to be composed into a system.
//system car1, car2, car3, car4, track1, track2, track3, track4;
//system car1, car2, car3, car4, Path1, Path2, Path3, Path4;
//system car1, car2, car3, car4,PathTest1, PathTest2, PathTest3, PathTest4;
system Field;

    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
